{"version":3,"sources":["../index.ts","../data.ts"],"sourcesContent":["import { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset,\n  Pcset,\n  PcsetChroma,\n  PcsetNum,\n} from \"@tonaljs/pcset\";\nimport data from \"./data\";\n\nexport type ChordQuality =\n  | \"Major\"\n  | \"Minor\"\n  | \"Augmented\"\n  | \"Diminished\"\n  | \"Unknown\";\n\nexport interface ChordType extends Pcset {\n  name: string;\n  quality: ChordQuality;\n  aliases: string[];\n}\nconst NoChordType: ChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: [],\n};\n\ntype ChordTypeName = string | PcsetChroma | PcsetNum;\n\nlet dictionary: ChordType[] = [];\nlet index: Record<ChordTypeName, ChordType> = {};\n\n/**\n * Given a chord name or chroma, return the chord properties\n * @param {string} source - chord name or pitch class set chroma\n * @example\n * import { get } from 'tonaljs/chord-type'\n * get('major') // => { name: 'major', ... }\n */\nexport function get(type: ChordTypeName): ChordType {\n  return index[type] || NoChordType;\n}\n\nexport const chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\n\n/**\n * Get all chord (long) names\n */\nexport function names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\n\n/**\n * Get all chord symbols\n */\nexport function symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\n\n/**\n * Keys used to reference chord types\n */\nexport function keys() {\n  return Object.keys(index);\n}\n\n/**\n * Return a list of all chord types\n */\nexport function all(): ChordType[] {\n  return dictionary.slice();\n}\n\nexport const entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\n\n/**\n * Clear the dictionary\n */\nexport function removeAll() {\n  dictionary = [];\n  index = {};\n}\n\n/**\n * Add a chord to the dictionary.\n * @param intervals\n * @param aliases\n * @param [fullName]\n */\nexport function add(intervals: string[], aliases: string[], fullName?: string) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases,\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\n\nexport function addAlias(chord: ChordType, alias: string) {\n  index[alias] = chord;\n}\n\nfunction getQuality(intervals: string[]): ChordQuality {\n  const has = (interval: string) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\")\n    ? \"Augmented\"\n    : has(\"3M\")\n    ? \"Major\"\n    : has(\"5d\")\n    ? \"Diminished\"\n    : has(\"3m\")\n    ? \"Minor\"\n    : \"Unknown\";\n}\n\ndata.forEach(([ivls, fullName, names]: string[]) =>\n  add(ivls.split(\" \"), names.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\n\nexport default {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  chordType,\n};\n","/**\n * @private\n * Chord List\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\n */\nconst CHORDS: string[][] = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth added ninth\", \"6add9 6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7\",\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\",\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 Δ9#11 ^9#11\",\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\n];\n\nexport default CHORDS;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAC1B,mBAMO;;;ACDP,IAAM,SAAqB;AAAA;AAAA,EAEzB,CAAC,YAAY,SAAS,UAAU;AAAA,EAChC,CAAC,eAAe,iBAAiB,4BAAuB;AAAA,EACxD,CAAC,kBAAkB,eAAe,iBAAY;AAAA,EAC9C,CAAC,sBAAsB,oBAAoB,iBAAiB;AAAA,EAC5D,CAAC,eAAe,SAAS,iBAAiB;AAAA,EAC1C,CAAC,kBAAkB,qBAAqB,kBAAkB;AAAA,EAC1D,CAAC,eAAe,4BAA4B,WAAW;AAAA,EACvD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAAA;AAAA,EAGA,CAAC,YAAY,SAAS,SAAS;AAAA,EAC/B,CAAC,eAAe,iBAAiB,gBAAgB;AAAA,EACjD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,CAAC,eAAe,eAAe,OAAO;AAAA,EACtC,CAAC,kBAAkB,eAAe,OAAO;AAAA,EACzC,CAAC,kBAAkB,qBAAqB,eAAe;AAAA,EACvD,CAAC,sBAAsB,kBAAkB,SAAS;AAAA,EAClD,CAAC,sBAAsB,oBAAoB,SAAS;AAAA;AAAA,EAEpD,CAAC,YAAY,cAAc,YAAS;AAAA,EACpC,CAAC,eAAe,sBAAsB,eAAY;AAAA,EAClD,CAAC,eAAe,mBAAmB,qBAAkB;AAAA;AAAA;AAAA,EAGrD,CAAC,eAAe,oBAAoB,OAAO;AAAA,EAC3C,CAAC,kBAAkB,kBAAkB,GAAG;AAAA,EACxC,CAAC,sBAAsB,uBAAuB,IAAI;AAAA,EAClD,CAAC,mBAAmB,2BAA2B,UAAU;AAAA;AAAA,EAEzD,CAAC,kBAAkB,uBAAuB,KAAK;AAAA,EAC/C,CAAC,kBAAkB,wBAAwB,KAAK;AAAA,EAChD,CAAC,eAAe,WAAW,MAAM;AAAA;AAAA,EAEjC,CAAC,YAAY,oBAAoB,UAAU;AAAA,EAC3C,CAAC,YAAY,oBAAoB,MAAM;AAAA,EACvC,CAAC,eAAe,4BAA4B,YAAY;AAAA,EACxD,CAAC,mBAAmB,YAAY,IAAI;AAAA,EACpC;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAAA,EAEA,CAAC,SAAS,SAAS,GAAG;AAAA,EACtB,CAAC,YAAY,aAAa,cAAc;AAAA,EACxC,CAAC,YAAY,mBAAmB,YAAY;AAAA,EAC5C,CAAC,eAAe,qBAAqB,0BAA0B;AAAA,EAC/D;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAAA,EAEA,CAAC,eAAe,IAAI,gBAAgB;AAAA,EACpC,CAAC,kBAAkB,IAAI,eAAe;AAAA,EACtC,CAAC,eAAe,IAAI,qBAAqB;AAAA,EACzC,CAAC,kBAAkB,IAAI,kBAAkB;AAAA,EACzC,CAAC,kBAAkB,IAAI,QAAQ;AAAA,EAC/B,CAAC,sBAAsB,IAAI,QAAQ;AAAA,EACnC,CAAC,kBAAkB,IAAI,aAAa;AAAA,EACpC,CAAC,sBAAsB,IAAI,UAAU;AAAA,EACrC,CAAC,eAAe,IAAI,QAAQ;AAAA,EAC5B,CAAC,eAAe,IAAI,eAAe;AAAA,EACnC,CAAC,mBAAmB,IAAI,qBAAqB;AAAA,EAC7C,CAAC,qBAAqB,IAAI,SAAS;AAAA,EACnC,CAAC,sBAAsB,IAAI,OAAO;AAAA,EAClC,CAAC,kBAAkB,IAAI,SAAS;AAAA,EAChC,CAAC,kBAAkB,IAAI,KAAK;AAAA,EAC5B,CAAC,sBAAsB,IAAI,WAAW;AAAA,EACtC,CAAC,0BAA0B,IAAI,6BAA6B;AAAA,EAC5D,CAAC,kBAAkB,IAAI,MAAM;AAAA,EAC7B,CAAC,uBAAuB,IAAI,gBAAgB;AAAA,EAC5C,CAAC,mBAAmB,IAAI,iBAAiB;AAAA,EACzC,CAAC,sBAAsB,IAAI,oBAAoB;AAAA,EAC/C,CAAC,0BAA0B,IAAI,SAAS;AAAA,EACxC,CAAC,0BAA0B,IAAI,WAAW;AAAA,EAC1C,CAAC,sBAAsB,IAAI,MAAM;AAAA,EACjC,CAAC,sBAAsB,IAAI,QAAQ;AAAA,EACnC,CAAC,sBAAsB,IAAI,cAAc;AAAA,EACzC,CAAC,0BAA0B,IAAI,iBAAiB;AAAA,EAChD,CAAC,0BAA0B,IAAI,gBAAgB;AAAA,EAC/C,CAAC,sBAAsB,IAAI,oBAAoB;AAAA,EAC/C,CAAC,0BAA0B,IAAI,SAAS;AAAA,EACxC,CAAC,0BAA0B,IAAI,8BAA8B;AAAA,EAC7D,CAAC,sBAAsB,IAAI,MAAM;AAAA,EACjC,CAAC,sBAAsB,IAAI,QAAQ;AAAA,EACnC,CAAC,qBAAqB,IAAI,OAAO;AAAA,EACjC,CAAC,eAAe,IAAI,mBAAmB;AAAA,EACvC,CAAC,eAAe,IAAI,QAAQ;AAAA,EAC5B,CAAC,YAAY,IAAI,KAAK;AAAA,EACtB,CAAC,qBAAqB,IAAI,MAAM;AAAA,EAChC,CAAC,eAAe,IAAI,MAAM;AAAA,EAC1B,CAAC,kBAAkB,IAAI,MAAM;AAAA,EAC7B,CAAC,eAAe,IAAI,KAAK;AAAA,EACzB,CAAC,kBAAkB,IAAI,KAAK;AAAA,EAC5B,CAAC,YAAY,IAAI,MAAM;AAAA,EACvB,CAAC,gBAAgB,IAAI,MAAM;AAAA,EAC3B,CAAC,eAAe,IAAI,MAAM;AAAA,EAC1B,CAAC,mBAAmB,IAAI,OAAO;AAAA,EAC/B,CAAC,mBAAmB,IAAI,MAAM;AAAA,EAC9B,CAAC,eAAe,IAAI,OAAO;AAAA,EAC3B,CAAC,kBAAkB,IAAI,SAAS;AAAA,EAChC,CAAC,qBAAqB,IAAI,SAAS;AAAA,EACnC,CAAC,mBAAmB,IAAI,gBAAgB;AAAA,EACxC,CAAC,eAAe,IAAI,OAAO;AAAA,EAC3B,CAAC,kBAAkB,IAAI,MAAM;AAAA,EAC7B,CAAC,eAAe,IAAI,KAAK;AAAA,EACzB,CAAC,eAAe,IAAI,OAAO;AAAA,EAC3B,CAAC,eAAe,IAAI,MAAM;AAAA,EAC1B,CAAC,kBAAkB,IAAI,MAAM;AAAA,EAC7B,CAAC,sBAAsB,IAAI,MAAM;AAAA,EACjC,CAAC,eAAe,IAAI,OAAO;AAAA,EAC3B,CAAC,kBAAkB,IAAI,MAAM;AAAA,EAC7B,CAAC,eAAe,IAAI,UAAU;AAAA,EAC9B,CAAC,kBAAkB,IAAI,UAAU;AAAA,EACjC,CAAC,eAAe,IAAI,SAAS;AAAA,EAC7B,CAAC,eAAe,IAAI,QAAQ;AAAA,EAC5B,CAAC,kBAAkB,IAAI,QAAQ;AAAA,EAC/B,CAAC,kBAAkB,IAAI,YAAY;AAAA,EACnC,CAAC,sBAAsB,IAAI,cAAc;AAAA,EACzC,CAAC,sBAAsB,IAAI,uBAAuB;AAAA,EAClD,CAAC,gBAAgB,IAAI,WAAW;AAAA,EAChC,CAAC,mBAAmB,IAAI,MAAM;AAChC;AAEA,IAAO,eAAQ;;;ADvHf,IAAM,cAAyB;AAAA,EAC7B,GAAG;AAAA,EACH,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW,CAAC;AAAA,EACZ,SAAS,CAAC;AACZ;AAIA,IAAI,aAA0B,CAAC;AAC/B,IAAI,QAA0C,CAAC;AASxC,SAAS,IAAI,MAAgC;AAClD,SAAO,MAAM,IAAI,KAAK;AACxB;AAEO,IAAM,gBAAY,uBAAU,uBAAuB,iBAAiB,GAAG;AAKvE,SAAS,QAAQ;AACtB,SAAO,WAAW,IAAI,CAAC,UAAU,MAAM,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC;AAC9D;AAKO,SAAS,UAAU;AACxB,SAAO,WAAW,IAAI,CAAC,UAAU,MAAM,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC;AACpE;AAKO,SAAS,OAAO;AACrB,SAAO,OAAO,KAAK,KAAK;AAC1B;AAKO,SAAS,MAAmB;AACjC,SAAO,WAAW,MAAM;AAC1B;AAEO,IAAM,cAAU,uBAAU,qBAAqB,iBAAiB,GAAG;AAKnE,SAAS,YAAY;AAC1B,eAAa,CAAC;AACd,UAAQ,CAAC;AACX;AAQO,SAAS,IAAI,WAAqB,SAAmB,UAAmB;AAC7E,QAAM,UAAU,WAAW,SAAS;AACpC,QAAM,QAAQ;AAAA,IACZ,OAAG,aAAAA,KAAM,SAAS;AAAA,IAClB,MAAM,YAAY;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,aAAW,KAAK,KAAK;AACrB,MAAI,MAAM,MAAM;AACd,UAAM,MAAM,IAAI,IAAI;AAAA,EACtB;AACA,QAAM,MAAM,MAAM,IAAI;AACtB,QAAM,MAAM,MAAM,IAAI;AACtB,QAAM,QAAQ,QAAQ,CAAC,UAAU,SAAS,OAAO,KAAK,CAAC;AACzD;AAEO,SAAS,SAAS,OAAkB,OAAe;AACxD,QAAM,KAAK,IAAI;AACjB;AAEA,SAAS,WAAW,WAAmC;AACrD,QAAM,MAAM,CAAC,aAAqB,UAAU,QAAQ,QAAQ,MAAM;AAClE,SAAO,IAAI,IAAI,IACX,cACA,IAAI,IAAI,IACR,UACA,IAAI,IAAI,IACR,eACA,IAAI,IAAI,IACR,UACA;AACN;AAEA,aAAK;AAAA,EAAQ,CAAC,CAAC,MAAM,UAAUC,MAAK,MAClC,IAAI,KAAK,MAAM,GAAG,GAAGA,OAAM,MAAM,GAAG,GAAG,QAAQ;AACjD;AACA,WAAW,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAE7C,IAAO,qBAAQ;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AACF;","names":["pcset","names"]}